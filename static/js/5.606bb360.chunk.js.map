{"version":3,"sources":["utils/CONSTANTS.js","utils/apiService.js","components/HomePage/styles.module.scss","components/HomePage/HomePage.js"],"names":["PAGES","movie","credits","reviews","REQUEST_KEYWORDS","cast","IMAGES_PLACEHOLDER_URL","baseImgURL","defaultImgURL","axios","defaults","baseURL","params","popularMovies","get","then","results","data","catch","error","console","log","searchMovies","searchQuery","url","encodeURIComponent","response","getMovieDetailsEndpoint","movieId","endpoint","movieDetails","module","exports","HomePage","useState","moviesList","setMoviesList","useEffect","map","id","title","to","pathname","state","page","className","styles","container","movieList"],"mappings":"yIACA,0GAAMA,EAAQ,CACZC,MAAO,UACPC,QAAS,WACTC,QAAS,YAGLC,EAAmB,CACrBC,KAAM,OACNF,QAAS,WAGPG,EAAyB,CAC3BC,WAAY,kCACZC,cAAe,2E,gCCdnB,qKAGAC,IAAMC,SAASC,QAAU,+BACzBF,IAAMC,SAASE,OAAS,CACtB,QAAW,oCAGb,IAAMC,EAAgB,WAEpB,OAAOJ,IACJK,IAFM,wBAGNC,MAAK,SAACC,GAAD,OAAaA,EAAQC,KAAKD,WAC/BE,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,OAG5BG,EAAe,SAACC,GACpB,IAAMC,EAAG,6BAAyBC,mBAAmBF,IACrD,OAAOd,IACJK,IAAIU,GACJT,MAAK,SAACW,GAAD,OAAcA,EAAST,KAAKD,WACjCE,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,OAG5BQ,EAA0B,SAACC,EAASC,GACxC,OAAQA,GACN,KAAKzB,IAAiBC,KACpB,MAAM,GAAN,OAAUL,IAAMC,OAAhB,OAAwB2B,GAAxB,OAAkC5B,IAAME,SAC1C,KAAKE,IAAiBD,QACpB,MAAM,GAAN,OAAUH,IAAMC,OAAhB,OAAwB2B,GAAxB,OAAkC5B,IAAMG,SAC1C,QACE,MAAM,GAAN,OAAUH,IAAMC,OAAhB,OAAwB2B,KAIxBE,EAAe,SAACN,GACpB,OAAOf,IACJK,IAAIU,GACJT,MAAK,SAACC,GAAD,OAAaA,EAAQC,QAC1BC,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,Q,mBCtClCY,EAAOC,QAAU,CAAC,UAAY,0BAA0B,UAAY,4B,iGC0BrDC,UAtBE,WAAO,IAAD,EACeC,mBAAS,IADxB,mBACdC,EADc,KACFC,EADE,KAcrB,OAZAC,qBAAU,WACRxB,cAAgBE,MAAK,SAACE,GAAD,OACnBmB,EACEnB,EAAKqB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACP,6BACE,cAAC,IAAD,CAAMC,GAAI,CAAEC,SAAS,WAAD,OAAaH,GAAMI,MAAO,CAAEC,KAAM,MAAtD,SAAgEJ,KADzDD,YAMd,IAGD,sBAAKM,UAAWC,IAAOC,UAAvB,UACE,gDACA,oBAAIF,UAAWC,IAAOE,UAAtB,SAAkCb","file":"static/js/5.606bb360.chunk.js","sourcesContent":["\r\nconst PAGES = {\r\n  movie: '/movie/',\r\n  credits: '/credits',\r\n  reviews: '/reviews',\r\n}\r\n\r\nconst REQUEST_KEYWORDS = {\r\n    cast: 'cast',\r\n    reviews: 'reviews',\r\n}\r\n\r\nconst IMAGES_PLACEHOLDER_URL = {\r\n    baseImgURL: 'https://image.tmdb.org/t/p/w500',\r\n    defaultImgURL: 'https://exceleratelabs.com/wp-content/uploads/2017/08/default-user.png',\r\n}\r\n\r\nexport { PAGES, REQUEST_KEYWORDS, IMAGES_PLACEHOLDER_URL };","import axios from 'axios';\nimport { PAGES, REQUEST_KEYWORDS} from './CONSTANTS';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  'api_key': 'e3b066e22b25d00eb414002518baafe2',\n};\n\nconst popularMovies = () => {\n  const url = `/trending/movie/week`;\n  return axios\n    .get(url)\n    .then((results) => results.data.results)\n    .catch((error) => console.log(error));\n};\n\nconst searchMovies = (searchQuery) => {\n  const url = `search/movie?query=${encodeURIComponent(searchQuery)}`;\n  return axios\n    .get(url)\n    .then((response) => response.data.results)\n    .catch((error) => console.log(error));\n};\n\nconst getMovieDetailsEndpoint = (movieId, endpoint) => {\n  switch (endpoint) {\n    case REQUEST_KEYWORDS.cast:\n      return `${PAGES.movie}${movieId}${PAGES.credits}`;\n    case REQUEST_KEYWORDS.reviews:\n      return `${PAGES.movie}${movieId}${PAGES.reviews}`;\n    default:\n      return `${PAGES.movie}${movieId}`;\n  }\n}\n\nconst movieDetails = (url) => {\n  return axios\n    .get(url)\n    .then((results) => results.data)\n    .catch((error) => console.log(error));\n};\n\nexport { popularMovies, searchMovies, getMovieDetailsEndpoint, movieDetails };\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__2eHBK\",\"movieList\":\"styles_movieList__3m1Q1\"};","import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { popularMovies } from '../../utils/apiService';\nimport styles from './styles.module.scss';\n\nconst HomePage = () => {\n  const [moviesList, setMoviesList] = useState([]);\n  useEffect(() => {\n    popularMovies().then((data) =>\n      setMoviesList(\n        data.map(({ id, title }) => (\n          <li key={id}>\n            <Link to={{ pathname: `/movies/${id}`, state: { page: '/' } }}>{title}</Link>\n          </li>\n        )),\n      ),\n    );\n  }, []);\n\n  return (\n    <div className={styles.container}>\n      <h1>Popular movies</h1>\n      <ul className={styles.movieList}>{moviesList}</ul>\n    </div>\n  );\n};\n\nexport default HomePage;\n\n// adult: false\n// backdrop_path: \"/pcDc2WJAYGJTTvRSEIpRZwM3Ola.jpg\"\n// genre_ids: (4) [28, 12, 14, 878]\n// id: 791373\n// media_type: \"movie\"\n// original_language: \"en\"\n// original_title: \"Zack Snyder's Justice League\"\n// overview: \"Determined to ensure Superman's ultimate sacrifice was not in vain, Bruce Wayne aligns forces with Diana Prince with plans to recruit a team of metahumans to protect the world from an approaching threat of catastrophic proportions.\"\n// popularity: 11783.352\n// poster_path: \"/tnAuB8q5vv7Ax9UAEje5Xi4BXik.jpg\"\n// release_date: \"2021-03-18\"\n// title: \"Zack Snyder's Justice League\"\n// video: false\n// vote_average: 8.7\n// vote_count: 3389\n"],"sourceRoot":""}